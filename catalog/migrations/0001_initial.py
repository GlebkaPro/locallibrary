# Generated by Django 4.0.8 on 2023-11-10 20:32

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=100, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Дата смерти')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Введите краткое описание книги', max_length=1000)),
                ('isbn', models.CharField(help_text='13-значный <a href="https://www.isbn-international.org/content/what-isbn">номер ISBN</a>', max_length=18, unique=True, verbose_name='ISBN')),
                ('image', models.ImageField(blank=True, null=True, upload_to='books/')),
            ],
            options={
                'ordering': ['title', 'author'],
            },
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор для этой конкретной книги во всей библиотеке', primary_key=True, serialize=False)),
                ('imprint', models.CharField(max_length=200, null=True, verbose_name='Штамп')),
                ('status', models.CharField(blank=True, choices=[('р', 'Выдано'), ('д', 'Доступно'), ('з', 'Зарезервировано')], default='д', help_text='Доступность книги', max_length=1, verbose_name='Статус')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите жанр книги (например, научная фантастика, французская поэзия и т. д.)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите естественный язык книги (например, английский, французский, японский и т. д.)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор для этой конкретной книги во всей библиотеке', primary_key=True, serialize=False)),
                ('due_back', models.DateField(blank=True, null=True, verbose_name='Дата возврата')),
                ('renewal_date', models.DateField(blank=True, null=True, verbose_name='Дата возврата')),
                ('current_date', models.DateField(default=django.utils.timezone.now, verbose_name='Текущая дата')),
                ('status', models.CharField(blank=True, choices=[('р', 'Выдано'), ('д', 'Доступно'), ('з', 'Зарезервировано'), ('п', 'Погашено')], default='р', help_text='Доступность книги', max_length=1, verbose_name='Статус')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='catalog.book', verbose_name='Книга')),
            ],
            options={
                'ordering': ['due_back'],
                'permissions': (('can_mark_returned', 'Отметить книгу как возвращенную'),),
            },
        ),
    ]
